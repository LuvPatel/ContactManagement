//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WebClient.ContactReference {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ContactReference.IContact")]
    public interface IContact {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContact/Contact", ReplyAction="http://tempuri.org/IContact/ContactResponse")]
        bool Contact(ContactManagement.User.contact c);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContact/Contact", ReplyAction="http://tempuri.org/IContact/ContactResponse")]
        System.Threading.Tasks.Task<bool> ContactAsync(ContactManagement.User.contact c);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IContactChannel : WebClient.ContactReference.IContact, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ContactClient : System.ServiceModel.ClientBase<WebClient.ContactReference.IContact>, WebClient.ContactReference.IContact {
        
        public ContactClient() {
        }
        
        public ContactClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ContactClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ContactClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ContactClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool Contact(ContactManagement.User.contact c) {
            return base.Channel.Contact(c);
        }
        
        public System.Threading.Tasks.Task<bool> ContactAsync(ContactManagement.User.contact c) {
            return base.Channel.ContactAsync(c);
        }
    }
}
